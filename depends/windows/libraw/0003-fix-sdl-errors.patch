--- a/src/decoders/crx.cpp
+++ b/src/decoders/crx.cpp
@@ -347,7 +347,7 @@ libraw_inline void crxDecodeSymbolL1(CrxBandParam *param,
               (bitCode << param->kParam);
 
   // add converted (+/-) error code to predicted value
-  param->lineBuf1[1] += -(bitCode & 1) ^ (bitCode >> 1);
+  param->lineBuf1[1] += (0u-(bitCode & 1)) ^ (bitCode >> 1);
 
   // for not end of the line - use one symbol ahead to estimate next K
   if (notEOL)
@@ -456,7 +456,7 @@ libraw_inline void crxDecodeSymbolL1Rounded(CrxBandParam *param,
   else if (param->kParam)
     bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
               (bitCode << param->kParam);
-  int32_t code = -(bitCode & 1) ^ (bitCode >> 1);
+  int32_t code = (0u-(bitCode & 1)) ^ (bitCode >> 1);
   param->lineBuf1[1] = param->roundedBitsMask * 2 * code + (code >> 31) + sym;
 
   if (doCode)
@@ -576,7 +576,7 @@ int crxDecodeLineNoRefPrevLine(CrxBandParam *param)
       else if (param->kParam)
         bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                   (bitCode << param->kParam);
-      param->lineBuf1[i + 1] = -(bitCode & 1) ^ (bitCode >> 1);
+      param->lineBuf1[i + 1] = (0u-(bitCode & 1)) ^ (bitCode >> 1);
       param->kParam = crxPredictKParameter(param->kParam, bitCode);
       if (param->lineBuf2[i + 1] - param->kParam <= 1)
       {
@@ -638,7 +638,7 @@ int crxDecodeLineNoRefPrevLine(CrxBandParam *param)
           else if (param->kParam)
             bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                       (bitCode << param->kParam);
-          param->lineBuf1[i + 1] = -((bitCode + 1) & 1) ^ ((bitCode + 1) >> 1);
+          param->lineBuf1[i + 1] = (0u-((bitCode + 1) & 1)) ^ ((bitCode + 1) >> 1);
           param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
           param->lineBuf2[i] = param->kParam;
         }
@@ -652,7 +652,7 @@ int crxDecodeLineNoRefPrevLine(CrxBandParam *param)
         else if (param->kParam)
           bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                     (bitCode << param->kParam);
-        param->lineBuf1[i + 1] = -((bitCode + 1) & 1) ^ ((bitCode + 1) >> 1);
+        param->lineBuf1[i + 1] = (0u-((bitCode + 1) & 1)) ^ ((bitCode + 1) >> 1);
         param->kParam = crxPredictKParameter(param->kParam, bitCode);
         if (param->lineBuf2[i + 1] - param->kParam <= 1)
         {
@@ -743,7 +743,7 @@ int crxDecodeTopLine(CrxBandParam *param)
     else if (param->kParam)
       bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                 (bitCode << param->kParam);
-    param->lineBuf1[1] += -(bitCode & 1) ^ (bitCode >> 1);
+    param->lineBuf1[1] += (0u-(bitCode & 1)) ^ (bitCode >> 1);
     param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     ++param->lineBuf1;
   }
@@ -757,7 +757,7 @@ int crxDecodeTopLine(CrxBandParam *param)
     else if (param->kParam)
       bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                 (bitCode << param->kParam);
-    param->lineBuf1[1] += -(bitCode & 1) ^ (bitCode >> 1);
+    param->lineBuf1[1] += (0u-(bitCode & 1)) ^ (bitCode >> 1);
     param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     ++param->lineBuf1;
   }
@@ -830,7 +830,7 @@ int crxDecodeTopLineRounded(CrxBandParam *param)
       bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                 (bitCode << param->kParam);
 
-    int32_t sVal = -(bitCode & 1) ^ (bitCode >> 1);
+    int32_t sVal = (0u-(bitCode & 1)) ^ (bitCode >> 1);
     param->lineBuf1[1] += param->roundedBitsMask * 2 * sVal + (sVal >> 31);
     param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     ++param->lineBuf1;
@@ -844,7 +844,7 @@ int crxDecodeTopLineRounded(CrxBandParam *param)
     else if (param->kParam)
       bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                 (bitCode << param->kParam);
-    int32_t sVal = -(bitCode & 1) ^ (bitCode >> 1);
+    int32_t sVal = (0u-(bitCode & 1)) ^ (bitCode >> 1);
     param->lineBuf1[1] += param->roundedBitsMask * 2 * sVal + (sVal >> 31);
     param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     ++param->lineBuf1;
@@ -870,7 +870,7 @@ int crxDecodeTopLineNoRefPrevLine(CrxBandParam *param)
       else if (param->kParam)
         bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                   (bitCode << param->kParam);
-      param->lineBuf1[1] = -(bitCode & 1) ^ (bitCode >> 1);
+      param->lineBuf1[1] = (0u-(bitCode & 1)) ^ (bitCode >> 1);
       param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     }
     else
@@ -922,7 +922,7 @@ int crxDecodeTopLineNoRefPrevLine(CrxBandParam *param)
       else if (param->kParam)
         bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                   (bitCode << param->kParam);
-      param->lineBuf1[1] = -((bitCode + 1) & 1) ^ ((bitCode + 1) >> 1);
+      param->lineBuf1[1] = (0u-((bitCode + 1) & 1)) ^ ((bitCode + 1) >> 1);
       param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     }
     param->lineBuf2[0] = param->kParam;
@@ -938,7 +938,7 @@ int crxDecodeTopLineNoRefPrevLine(CrxBandParam *param)
     else if (param->kParam)
       bitCode = crxBitstreamGetBits(&param->bitStream, param->kParam) |
                 (bitCode << param->kParam);
-    param->lineBuf1[1] = -(bitCode & 1) ^ (bitCode >> 1);
+    param->lineBuf1[1] = (0u-(bitCode & 1)) ^ (bitCode >> 1);
     param->kParam = crxPredictKParameter(param->kParam, bitCode, 15);
     param->lineBuf2[0] = param->kParam;
     ++param->lineBuf1;
@@ -1085,7 +1085,7 @@ int crxDecodeLineWithIQuantization(CrxSubband *subband)
           (bitCode << subband->paramK);
 
     subband->quantValue +=
-        -(bitCode & 1) ^ (bitCode >> 1); // converting encoded to signed integer
+        (0u-(bitCode & 1) ^ (bitCode >> 1)); // converting encoded to signed integer
     subband->paramK = crxPredictKParameter(subband->paramK, bitCode);
     if (subband->paramK > 7)
       return -1;
